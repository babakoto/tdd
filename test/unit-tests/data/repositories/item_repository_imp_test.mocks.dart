// Mocks generated by Mockito 5.1.0 from annotations
// in clean_tdd_bloc/test/unit-tests/data/repositories/item_repository_imp_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:clean_tdd_bloc/data/models/item_model.dart' as _i4;
import 'package:clean_tdd_bloc/data/sources/local/local_source.dart' as _i2;
import 'package:clean_tdd_bloc/data/sources/network/network_source.dart' as _i6;
import 'package:clean_tdd_bloc/data/sources/server/server_source.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [LocalSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalSource extends _i1.Mock implements _i2.LocalSource {
  MockLocalSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.ItemModel>> findItems() =>
      (super.noSuchMethod(Invocation.method(#findItems, []),
              returnValue: Future<List<_i4.ItemModel>>.value(<_i4.ItemModel>[]))
          as _i3.Future<List<_i4.ItemModel>>);
}

/// A class which mocks [ServerSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockServerSource extends _i1.Mock implements _i5.ServerSource {
  MockServerSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.ItemModel>> findItems() =>
      (super.noSuchMethod(Invocation.method(#findItems, []),
              returnValue: Future<List<_i4.ItemModel>>.value(<_i4.ItemModel>[]))
          as _i3.Future<List<_i4.ItemModel>>);
  @override
  _i3.Future<_i4.ItemModel?> findItemById({int? id}) =>
      (super.noSuchMethod(Invocation.method(#findItemById, [], {#id: id}),
              returnValue: Future<_i4.ItemModel?>.value())
          as _i3.Future<_i4.ItemModel?>);
}

/// A class which mocks [NetworkSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkSource extends _i1.Mock implements _i6.NetworkSource {
  MockNetworkSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> isOnline() =>
      (super.noSuchMethod(Invocation.method(#isOnline, []),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
}
